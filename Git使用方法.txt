git 删除远程仓库中的文件夹/文件：
1 -- $ git pull origin master //将远程仓库里面的项目拉下来
2 -- $ dir  //查看有哪些文件夹
3 -- $ git rm -r --cached 文件夹名/文件名  //删除文件夹(这里的文件夹名有空格命令行需要用"\ "来拼接，反斜线后有一个空格）
4 -- $ git commit -m  "这里输入相关信息"  //'删除了哪个文件夹'  提交,添加操作说明
5 -- $ git push -u origin master  //将本次更改更新到GitHub项目上去

git 上传步骤：
1 -- 登陆 GitHub 创建一个远端仓库并拷贝其https地址(或ssh地址)
2 -- 在本地创建一个文件夹作为本地仓库，将项目源码文件夹拷贝到本地仓库(项目源码文件夹中若存在 .git 后缀的文件夹请先删除)
3 -- 在本地仓库中右键 Git Bash 进入命令行
4 -- $ git init  //初始化本地仓库（该命令执行完毕本地仓库会出现一个 .git 文件夹）
5 -- $ git add .    //添加本地仓库所有代码（注意末尾有个点）
6 -- $ git commit -m "这里输入相关提交信息"    //将本地仓库中所有代码刷入暂存工作区
7 -- $ git remote add origin <https地址/SSH地址>  //与远端仓库建立连接；origin为远端仓库链接的本地用户名，可替换
                                                 //该操作只在建立新的本地仓库的时候使用一次即可，后续提交使用本地用户名(origin)即可
8 -- $ git push -u origin master //将本地仓库内的所有内容提交到远端仓库
---------------这时刷新 GitHub 仓库就可以看见刚刚提交的内容了------------------

git 提交多个源码文件夹到同一个远端仓库下：
一 、如果执行过上面的步骤：
1 -- $ git add .  //添加所有
2 -- $ git commit -m "这里输入相关信息"  //添加到暂存工作区
3 -- $ git push -u origin master  //提交到远端仓库 

关于何时需要 $ git init ：
当该本地仓库中存在 .git 文件夹时，说明该仓库已被init过，不需要再次init，如果不存在则需要 init 

关于远端仓库连接在本地的用户名：
远端仓库的https/SSH地址在本地的用户名只要没有被删除或者修改，可以一直使用
